<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="_idle_state_8h" kind="file" language="C++">
    <compoundname>IdleState.h</compoundname>
    <includes refid="_state__t_8h" local="yes">OS/include/State_t.h</includes>
    <includes refid="_i_task_wrapper__t_8h" local="yes">OS/include/ITaskWrapper_t.h</includes>
    <includedby refid="_drop_o_s_8cpp" local="yes">src/OS/src/DropOS.cpp</includedby>
    <includedby refid="_states_8h" local="yes">src/States/include/States.h</includedby>
    <includedby refid="_calibration_state_8cpp" local="yes">src/States/src/CalibrationState.cpp</includedby>
    <includedby refid="_idle_state_8cpp" local="yes">src/States/src/IdleState.cpp</includedby>
    <incdepgraph>
      <node id="6">
        <label>DropOS.h</label>
        <link refid="_drop_o_s_8h"/>
      </node>
      <node id="5">
        <label>ITaskWrapper_t.h</label>
        <link refid="_i_task_wrapper__t_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>OS/include/State_t.h</label>
        <link refid="_state__t_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/States/include/IdleState.h</label>
        <link refid="_idle_state_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>functional</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>src/OS/src/DropOS.cpp</label>
        <link refid="_drop_o_s_8cpp"/>
      </node>
      <node id="1">
        <label>src/States/include/IdleState.h</label>
        <link refid="_idle_state_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/States/include/States.h</label>
        <link refid="_states_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>src/States/src/CalibrationState.cpp</label>
        <link refid="_calibration_state_8cpp"/>
      </node>
      <node id="6">
        <label>src/States/src/IdleState.cpp</label>
        <link refid="_idle_state_8cpp"/>
      </node>
      <node id="4">
        <label>src/Tasks/src/FSMTask.cpp</label>
        <link refid="_f_s_m_task_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_idle_state" prot="public">IdleState</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_state__t_8h" kindref="compound">OS/include/State_t.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_i_task_wrapper__t_8h" kindref="compound">OS/include/ITaskWrapper_t.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_drop_o_s" kindref="compound">DropOS</ref>;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="class_idle_state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_idle_state" kindref="compound">IdleState</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_state__t" kindref="compound">State_t</ref></highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_state__t" kindref="compound">State_t</ref>*<sp/><ref refid="class_idle_state_1a65ede556b1bcc1ac605d6eae016bba3f" kindref="member">next_state</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;ITaskWrapper*&gt;<sp/><ref refid="class_idle_state_1abb6813618956aea7da1e2886f2baf77f" kindref="member">tasks</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="src/States/include/IdleState.h"/>
  </compounddef>
</doxygen>
