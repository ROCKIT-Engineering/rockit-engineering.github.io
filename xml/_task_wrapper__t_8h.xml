<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="_task_wrapper__t_8h" kind="file" language="C++">
    <compoundname>TaskWrapper_t.h</compoundname>
    <includes local="yes">arduino_freertos.h</includes>
    <includes refid="_i_task_wrapper__t_8h" local="yes">ITaskWrapper_t.h</includes>
    <includes refid="_drop_o_s_8h" local="yes">DropOS.h</includes>
    <includedby refid="_dummy_sender_task_8h" local="yes">src/Tasks/include/DummySenderTask.h</includedby>
    <includedby refid="_f_s_m_task_8h" local="yes">src/Tasks/include/FSMTask.h</includedby>
    <includedby refid="_g_p_s_task_8h" local="yes">src/Tasks/include/GPSTask.h</includedby>
    <includedby refid="_i_m_u_task_8h" local="yes">src/Tasks/include/IMUTask.h</includedby>
    <includedby refid="_lidar_task_8h" local="yes">src/Tasks/include/LidarTask.h</includedby>
    <includedby refid="_state_estimation_task_8h" local="yes">src/Tasks/include/StateEstimationTask.h</includedby>
    <includedby refid="_telemetry_task_8h" local="yes">src/Tasks/include/TelemetryTask.h</includedby>
    <includedby refid="_g_p_s_task_8cpp" local="yes">src/Tasks/src/GPSTask.cpp</includedby>
    <includedby refid="_state_estimation_task_8cpp" local="yes">src/Tasks/src/StateEstimationTask.cpp</includedby>
    <incdepgraph>
      <node id="4">
        <label>DropOS.h</label>
        <link refid="_drop_o_s_8h"/>
      </node>
      <node id="3">
        <label>ITaskWrapper_t.h</label>
        <link refid="_i_task_wrapper__t_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/OS/include/TaskWrapper_t.h</label>
        <link refid="_task_wrapper__t_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>arduino_freertos.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>src/OS/include/TaskWrapper_t.h</label>
        <link refid="_task_wrapper__t_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>src/OS/src/DropOS.cpp</label>
        <link refid="_drop_o_s_8cpp"/>
      </node>
      <node id="4">
        <label>src/States/src/CalibrationState.cpp</label>
        <link refid="_calibration_state_8cpp"/>
      </node>
      <node id="5">
        <label>src/States/src/DebugState.cpp</label>
        <link refid="_debug_state_8cpp"/>
      </node>
      <node id="6">
        <label>src/States/src/IdleState.cpp</label>
        <link refid="_idle_state_8cpp"/>
      </node>
      <node id="2">
        <label>src/Tasks/include/DummySenderTask.h</label>
        <link refid="_dummy_sender_task_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>src/Tasks/include/FSMTask.h</label>
        <link refid="_f_s_m_task_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>src/Tasks/include/GPSTask.h</label>
        <link refid="_g_p_s_task_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>src/Tasks/include/IMUTask.h</label>
        <link refid="_i_m_u_task_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>src/Tasks/include/LidarTask.h</label>
        <link refid="_lidar_task_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>src/Tasks/include/StateEstimationTask.h</label>
        <link refid="_state_estimation_task_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/Tasks/include/Tasks.h</label>
        <link refid="_tasks_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>src/Tasks/include/TelemetryTask.h</label>
        <link refid="_telemetry_task_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>src/Tasks/src/DummySenderTask.cpp</label>
        <link refid="_dummy_sender_task_8cpp"/>
      </node>
      <node id="11">
        <label>src/Tasks/src/FSMTask.cpp</label>
        <link refid="_f_s_m_task_8cpp"/>
      </node>
      <node id="13">
        <label>src/Tasks/src/GPSTask.cpp</label>
        <link refid="_g_p_s_task_8cpp"/>
      </node>
      <node id="15">
        <label>src/Tasks/src/IMUTask.cpp</label>
        <link refid="_i_m_u_task_8cpp"/>
      </node>
      <node id="17">
        <label>src/Tasks/src/LidarTask.cpp</label>
        <link refid="_lidar_task_8cpp"/>
      </node>
      <node id="7">
        <label>src/Tasks/src/StateEstimationTask.cpp</label>
        <link refid="_state_estimation_task_8cpp"/>
      </node>
      <node id="20">
        <label>src/Tasks/src/TelemetryTask.cpp</label>
        <link refid="_telemetry_task_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_task_wrapper__t" prot="public">TaskWrapper_t</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;arduino_freertos.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_i_task_wrapper__t_8h" kindref="compound">ITaskWrapper_t.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_drop_o_s_8h" kindref="compound">DropOS.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="class_task_wrapper__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_task_wrapper__t_1a7ba4c703a334ebf38d7038bd6425e192" kindref="member">TaskWrapper_t</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_task_wrapper__t_1af868e5c1b1f7a8054a3ae31ef7f97b9d" kindref="member">ITaskWrapper</ref><sp/>{</highlight></codeline>
<codeline lineno="22" refid="class_task_wrapper__t_1af868e5c1b1f7a8054a3ae31ef7f97b9d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_task_wrapper__t_1af868e5c1b1f7a8054a3ae31ef7f97b9d" kindref="member">ITaskWrapper</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="class_task_wrapper__t_1a756507aeb0164323c36493484e040ea3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_task_wrapper__t_1a756507aeb0164323c36493484e040ea3" kindref="member">suspend</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_i_task_wrapper_1ac886f581a42a519b9a77657f5a632dbb" kindref="member">onSuspend</ref>();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskSuspend(handle);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_task_wrapper__t_1abe6bb090f07f4244d77e14a9edb44e23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_task_wrapper__t_1abe6bb090f07f4244d77e14a9edb44e23" kindref="member">resume</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_i_task_wrapper_1aadf4d89a473f9e21114b026cd50e9d73" kindref="member">onResume</ref>();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskResume(handle);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="class_task_wrapper__t_1a8ae179e4a303dcec6ef5a8cd09d3be0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_task_wrapper__t_1a8ae179e4a303dcec6ef5a8cd09d3be0b" kindref="member">~TaskWrapper_t</ref>()<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelete(handle);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="class_task_wrapper__t_1a4cd207eb6571b254191f4609f912e1a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T&amp;<sp/><ref refid="class_task_wrapper__t_1a4cd207eb6571b254191f4609f912e1a6" kindref="member">instance</ref>()<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/><ref refid="class_task_wrapper__t_1a4cd207eb6571b254191f4609f912e1a6" kindref="member">instance</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_task_wrapper__t_1a4cd207eb6571b254191f4609f912e1a6" kindref="member">instance</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46" refid="class_task_wrapper__t_1a7ba4c703a334ebf38d7038bd6425e192" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_task_wrapper__t_1a7ba4c703a334ebf38d7038bd6425e192" kindref="member">TaskWrapper_t</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,<sp/>UBaseType_t<sp/>priority<sp/>=<sp/>tskIDLE_PRIORITY<sp/>+<sp/>1,<sp/>uint16_t<sp/>stackDepth<sp/>=<sp/>128)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>name(name),<sp/>priority(priority),<sp/>stackDepth(stackDepth),<sp/>handle(nullptr)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xTaskCreate(taskEntry,<sp/>name,<sp/>stackDepth,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>priority,<sp/>&amp;handle);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51" refid="class_task_wrapper__t_1ab970e8b20a3eeec49e76ab9545f30bc9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_task_wrapper__t_1ab970e8b20a3eeec49e76ab9545f30bc9" kindref="member">setFrequency</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>taskFrequency)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;taskFrequency<sp/>=<sp/>taskFrequency;<sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>taskEntry(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pvParameters)<sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>task<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pvParameters);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task-&gt;init();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(task-&gt;taskFrequency<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>task<sp/>frequency<sp/>not<sp/>set!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configASSERT(task-&gt;taskFrequency<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1);<sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task-&gt;lastTickTime<sp/>=<sp/>xTaskGetTickCount();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task-&gt;run();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vTaskDelayUntil(&amp;task-&gt;lastTickTime,<sp/>pdMS_TO_TICKS(1000<sp/>/<sp/>task-&gt;taskFrequency));<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>UBaseType_t<sp/>priority;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>stackDepth;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>TaskHandle_t<sp/>handle;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>taskFrequency<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>TickType_t<sp/>lastTickTime;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="src/OS/include/TaskWrapper_t.h"/>
  </compounddef>
</doxygen>
