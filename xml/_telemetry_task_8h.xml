<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="_telemetry_task_8h" kind="file" language="C++">
    <compoundname>TelemetryTask.h</compoundname>
    <includes local="yes">arduino_freertos.h</includes>
    <includes local="yes">queue.h</includes>
    <includes local="yes">semphr.h</includes>
    <includes refid="_task_wrapper__t_8h" local="yes">OS/include/TaskWrapper_t.h</includes>
    <includes refid="_drop_o_s_8h" local="yes">OS/include/DropOS.h</includes>
    <includedby refid="_tasks_8h" local="yes">src/Tasks/include/Tasks.h</includedby>
    <includedby refid="_dummy_sender_task_8cpp" local="yes">src/Tasks/src/DummySenderTask.cpp</includedby>
    <includedby refid="_f_s_m_task_8cpp" local="yes">src/Tasks/src/FSMTask.cpp</includedby>
    <includedby refid="_g_p_s_task_8cpp" local="yes">src/Tasks/src/GPSTask.cpp</includedby>
    <includedby refid="_i_m_u_task_8cpp" local="yes">src/Tasks/src/IMUTask.cpp</includedby>
    <includedby refid="_lidar_task_8cpp" local="yes">src/Tasks/src/LidarTask.cpp</includedby>
    <includedby refid="_state_estimation_task_8cpp" local="yes">src/Tasks/src/StateEstimationTask.cpp</includedby>
    <includedby refid="_telemetry_task_8cpp" local="yes">src/Tasks/src/TelemetryTask.cpp</includedby>
    <incdepgraph>
      <node id="7">
        <label>DropOS.h</label>
        <link refid="_drop_o_s_8h"/>
      </node>
      <node id="6">
        <label>ITaskWrapper_t.h</label>
        <link refid="_i_task_wrapper__t_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>OS/include/TaskWrapper_t.h</label>
        <link refid="_task_wrapper__t_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/Tasks/include/TelemetryTask.h</label>
        <link refid="_telemetry_task_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>arduino_freertos.h</label>
      </node>
      <node id="3">
        <label>queue.h</label>
      </node>
      <node id="4">
        <label>semphr.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>src/States/src/CalibrationState.cpp</label>
        <link refid="_calibration_state_8cpp"/>
      </node>
      <node id="4">
        <label>src/States/src/DebugState.cpp</label>
        <link refid="_debug_state_8cpp"/>
      </node>
      <node id="5">
        <label>src/States/src/IdleState.cpp</label>
        <link refid="_idle_state_8cpp"/>
      </node>
      <node id="2">
        <label>src/Tasks/include/Tasks.h</label>
        <link refid="_tasks_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/Tasks/include/TelemetryTask.h</label>
        <link refid="_telemetry_task_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>src/Tasks/src/DummySenderTask.cpp</label>
        <link refid="_dummy_sender_task_8cpp"/>
      </node>
      <node id="8">
        <label>src/Tasks/src/FSMTask.cpp</label>
        <link refid="_f_s_m_task_8cpp"/>
      </node>
      <node id="9">
        <label>src/Tasks/src/GPSTask.cpp</label>
        <link refid="_g_p_s_task_8cpp"/>
      </node>
      <node id="10">
        <label>src/Tasks/src/IMUTask.cpp</label>
        <link refid="_i_m_u_task_8cpp"/>
      </node>
      <node id="11">
        <label>src/Tasks/src/LidarTask.cpp</label>
        <link refid="_lidar_task_8cpp"/>
      </node>
      <node id="6">
        <label>src/Tasks/src/StateEstimationTask.cpp</label>
        <link refid="_state_estimation_task_8cpp"/>
      </node>
      <node id="12">
        <label>src/Tasks/src/TelemetryTask.cpp</label>
        <link refid="_telemetry_task_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_telemetry_task" prot="public">TelemetryTask</innerclass>
    <sectiondef kind="var">
      <memberdef kind="variable" id="_telemetry_task_8h_1a7fb173e5705b105b7eee6109588c707c" prot="public" static="no" extern="yes" mutable="no">
        <type>QueueHandle_t</type>
        <definition>QueueHandle_t xTelemetryQueue</definition>
        <argsstring></argsstring>
        <name>xTelemetryQueue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tasks/include/TelemetryTask.h" line="12" column="22" bodyfile="src/Tasks/src/TelemetryTask.cpp" bodystart="10" bodyend="-1" declfile="src/Tasks/include/TelemetryTask.h" declline="12" declcolumn="22"/>
      </memberdef>
      <memberdef kind="variable" id="_telemetry_task_8h_1a994555402c78706aeb504f3da38dfcc2" prot="public" static="no" extern="yes" mutable="no">
        <type>SemaphoreHandle_t</type>
        <definition>SemaphoreHandle_t xSerialMutex</definition>
        <argsstring></argsstring>
        <name>xSerialMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tasks/include/TelemetryTask.h" line="13" column="26" bodyfile="src/Tasks/src/TelemetryTask.cpp" bodystart="11" bodyend="-1" declfile="src/Tasks/include/TelemetryTask.h" declline="13" declcolumn="26"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="_telemetry_task_8h_1a1190c2c6208e2e36915a767c67024fe7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sendTelemetry</definition>
        <argsstring>(const char *msg)</argsstring>
        <name>sendTelemetry</name>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Tasks/include/TelemetryTask.h" line="16" column="6" bodyfile="src/Tasks/src/TelemetryTask.cpp" bodystart="41" bodyend="52" declfile="src/Tasks/include/TelemetryTask.h" declline="16" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>TelemetryTask.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;arduino_freertos.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;queue.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;semphr.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_task_wrapper__t_8h" kindref="compound">OS/include/TaskWrapper_t.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_drop_o_s_8h" kindref="compound">OS/include/DropOS.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Global<sp/>queue<sp/>and<sp/>mutex<sp/>used<sp/>by<sp/>sendTelemetry<sp/>and<sp/>TelemetryTask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>QueueHandle_t<sp/><ref refid="_telemetry_task_8h_1a7fb173e5705b105b7eee6109588c707c" kindref="member">xTelemetryQueue</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>SemaphoreHandle_t<sp/><ref refid="_telemetry_task_8h_1a994555402c78706aeb504f3da38dfcc2" kindref="member">xSerialMutex</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>sendTelemetry<sp/>API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_telemetry_task_8h_1a1190c2c6208e2e36915a767c67024fe7" kindref="member">sendTelemetry</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="class_telemetry_task" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_telemetry_task_1a074aa1d537777ee1b58841e7fa47e601" kindref="member">TelemetryTask</ref><sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_telemetry_task_1ac4a28d78b2f7d3d899893ce5fdce4bb8" kindref="member">TaskWrapper_t</ref>&lt;TelemetryTask&gt;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20" refid="class_telemetry_task_1ac4a28d78b2f7d3d899893ce5fdce4bb8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_telemetry_task_1ac4a28d78b2f7d3d899893ce5fdce4bb8" kindref="member">TaskWrapper_t</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_telemetry_task_1a46abe41bb9f57a2e8960a6c667484494" kindref="member">run</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_telemetry_task_1a8f55ae3e193abefbbd63af072f87878d" kindref="member">init</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_telemetry_task_1a074aa1d537777ee1b58841e7fa47e601" kindref="member">TelemetryTask</ref>();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="src/Tasks/include/TelemetryTask.h"/>
  </compounddef>
</doxygen>
