<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="class_debug_state" kind="class" language="C++" prot="public">
    <compoundname>DebugState</compoundname>
    <basecompoundref refid="class_state__t" prot="public" virt="non-virtual">State_t</basecompoundref>
    <includes refid="_debug_state_8h" local="no">DebugState.h</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_debug_state_1ac53cb4de315b094193e983c3e9d2d6b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_state__t" kindref="compound">State_t</ref> *</type>
        <definition>State_t * DebugState::next_state</definition>
        <argsstring>() override</argsstring>
        <name>next_state</name>
        <qualifiedname>DebugState::next_state</qualifiedname>
        <reimplements refid="class_state__t_1a046861196afdb2e982361581c7f41637">next_state</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used to determine the next state which should be entered. If no valid transition was found, nullptr should be returned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/States/include/DebugState.h" line="11" column="13" bodyfile="src/States/src/DebugState.cpp" bodystart="5" bodyend="7"/>
      </memberdef>
      <memberdef kind="function" id="class_debug_state_1a7e227abc58baf0ddff96319033a0127a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; <ref refid="class_i_task_wrapper" kindref="compound">ITaskWrapper</ref> * &gt;</type>
        <definition>std::vector&lt; ITaskWrapper * &gt; DebugState::tasks</definition>
        <argsstring>() override</argsstring>
        <name>tasks</name>
        <qualifiedname>DebugState::tasks</qualifiedname>
        <reimplements refid="class_state__t_1a7024654c41680e93ddc60e7e8022ce5b">tasks</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/States/include/DebugState.h" line="12" column="17" bodyfile="src/States/src/DebugState.cpp" bodystart="9" bodyend="13"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>DebugState</label>
        <link refid="class_debug_state"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>State_t</label>
        <link refid="class_state__t"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>DebugState</label>
        <link refid="class_debug_state"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>State_t</label>
        <link refid="class_state__t"/>
      </node>
    </collaborationgraph>
    <location file="src/States/include/DebugState.h" line="8" column="1" bodyfile="src/States/include/DebugState.h" bodystart="9" bodyend="13"/>
    <listofallmembers>
      <member refid="class_state__t_1ab340222f649c6b6b0d8ac7cf4a5bae93" prot="public" virt="virtual"><scope>DebugState</scope><name>enter</name></member>
      <member refid="class_state__t_1a14c0660e42b7e097766644d8aa366cae" prot="public" virt="virtual"><scope>DebugState</scope><name>exit</name></member>
      <member refid="class_debug_state_1ac53cb4de315b094193e983c3e9d2d6b1" prot="public" virt="virtual"><scope>DebugState</scope><name>next_state</name></member>
      <member refid="class_debug_state_1a7e227abc58baf0ddff96319033a0127a" prot="public" virt="virtual"><scope>DebugState</scope><name>tasks</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
