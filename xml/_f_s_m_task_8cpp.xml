<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="_f_s_m_task_8cpp" kind="file" language="C++">
    <compoundname>FSMTask.cpp</compoundname>
    <includes local="yes">arduino_freertos.h</includes>
    <includes local="yes">TFLI2C.h</includes>
    <includes refid="pins_8h" local="yes">pins.h</includes>
    <includes refid="_o_s___c_o_n_f_i_g_8h" local="yes">OS_CONFIG.h</includes>
    <includes refid="_telemetry_task_8h" local="yes">Tasks/include/TelemetryTask.h</includes>
    <includes refid="_f_s_m_task_8h" local="yes">Tasks/include/FSMTask.h</includes>
    <includes refid="_state__t_8h" local="yes">OS/include/State_t.h</includes>
    <includes refid="_states_8h" local="yes">States/include/States.h</includes>
    <incdepgraph>
      <node id="11">
        <label>DropOS.h</label>
        <link refid="_drop_o_s_8h"/>
      </node>
      <node id="10">
        <label>ITaskWrapper_t.h</label>
        <link refid="_i_task_wrapper__t_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>OS/include/State_t.h</label>
        <link refid="_state__t_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>OS/include/TaskWrapper_t.h</label>
        <link refid="_task_wrapper__t_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>OS_CONFIG.h</label>
        <link refid="_o_s___c_o_n_f_i_g_8h"/>
      </node>
      <node id="19">
        <label>CalibrationState.h</label>
        <link refid="_calibration_state_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>DebugState.h</label>
        <link refid="_debug_state_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>IdleState.h</label>
        <link refid="_idle_state_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>States/include/States.h</label>
        <link refid="_states_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>Tasks/include/FSMTask.h</label>
        <link refid="_f_s_m_task_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Tasks/include/TelemetryTask.h</label>
        <link refid="_telemetry_task_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/Tasks/src/FSMTask.cpp</label>
        <link refid="_f_s_m_task_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>pins.h</label>
        <link refid="pins_8h"/>
      </node>
      <node id="3">
        <label>TFLI2C.h</label>
      </node>
      <node id="2">
        <label>arduino_freertos.h</label>
      </node>
      <node id="14">
        <label>functional</label>
      </node>
      <node id="7">
        <label>queue.h</label>
      </node>
      <node id="8">
        <label>semphr.h</label>
      </node>
      <node id="15">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;arduino_freertos.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TFLI2C.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pins_8h" kindref="compound">pins.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_o_s___c_o_n_f_i_g_8h" kindref="compound">OS_CONFIG.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_telemetry_task_8h" kindref="compound">Tasks/include/TelemetryTask.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_f_s_m_task_8h" kindref="compound">Tasks/include/FSMTask.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_state__t_8h" kindref="compound">OS/include/State_t.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_states_8h" kindref="compound">States/include/States.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><ref refid="class_f_s_m_task_1acc045c06ae314142274652dac8825f18" kindref="member">FSMTask::FSMTask</ref>()</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_task_wrapper__t" kindref="compound">TaskWrapper_t</ref>(</highlight><highlight class="stringliteral">&quot;FSMTask&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>256)</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_f_s_m_task_1a08cd96249a1062f45796e957c02f8561" kindref="member">FSMTask::init</ref>()<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_task_wrapper__t_1ab970e8b20a3eeec49e76ab9545f30bc9" kindref="member">setFrequency</ref>(<ref refid="_o_s___c_o_n_f_i_g_8h_1aa840e7646d8d30cb98887480d49a93a5" kindref="member">FSM_HZ</ref>);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_s_m_task_1a6be425bdffe9121ad0b3147fec892682" kindref="member">current_state</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CalibrationState();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;Enter<sp/>calibration<sp/>state&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_s_m_task_1a6be425bdffe9121ad0b3147fec892682" kindref="member">current_state</ref>-&gt;enter();</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_f_s_m_task_1aae5383d759a7a4894dd9f6510914082b" kindref="member">FSMTask::run</ref>()<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>State_t*<sp/>next_state<sp/>=<sp/><ref refid="class_f_s_m_task_1a6be425bdffe9121ad0b3147fec892682" kindref="member">current_state</ref>-&gt;next_state();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next_state)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_f_s_m_task_1a6be425bdffe9121ad0b3147fec892682" kindref="member">current_state</ref>-&gt;exit();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_f_s_m_task_1a6be425bdffe9121ad0b3147fec892682" kindref="member">current_state</ref><sp/>=<sp/>next_state;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_f_s_m_task_1a6be425bdffe9121ad0b3147fec892682" kindref="member">current_state</ref>-&gt;enter();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/Tasks/src/FSMTask.cpp"/>
  </compounddef>
</doxygen>
